rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /posts/{id} {
      allow read: if request.auth!=null;
      allow create: if request.auth!=null && validPost(request.resource.data);
      allow update: if request.auth!=null && validUpdate(resource.data, request.resource.data)
    }
    function validPost(post){
      return post.text.size() <= 300 && post.comments == 0 && post.likes == 0 && post.reports == 0;
    }
    function validUpdate(oldPost, newPost){
      return (oldPost.likes + 1 == newPost.likes || oldPost.comments + 1 == newPost.comments || oldPost.reports + 1 == newPost.reports)
        && oldPost.imgPath == newPost.imgPath && oldPost.text == newPost.text && oldPost.timestamp == newPost.timestamp;
    }
    match /posts/{id}/comments/{cid} {
      allow read: if request.auth!=null;
      allow create: if request.auth!=null && validComment(request.resource.data);
    }
    function validComment(comment){
      return comment.text.size() <= 200;
    }
    match /users/{uid}/{document=**} {
      allow read, create: if request.auth.uid == uid;
    }
  }
}